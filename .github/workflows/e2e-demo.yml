name: e2e-demo

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the "main" branch
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      FRONTEND_TEST_URL: pr${{ github.event.pull_request.number }}.${{ vars.DOMAIN }}
      FRONTEND_PROD_URL: burgerplaces.${{ vars.DOMAIN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          logout: true

      - name: Build docker images
        run: |
          # Fails the build if anything returns non-zero
          set -e
          # Echo commands to the console
          set -x

          # Build backend and frontend images
          cd backend
          docker build -t ${{ secrets.DOCKER_URL }}/burger-back:${{ github.sha }} .
          cd ../frontend
          docker build -t ${{ secrets.DOCKER_URL }}/burger-front:${{ github.sha }} .
          cd ../

      - name: Push Docker Images
        run: |
          # push docker images to dockerhub
          docker push ${{ secrets.DOCKER_URL }}/burger-back:${{ github.sha }}
          docker push ${{ secrets.DOCKER_URL }}/burger-front:${{ github.sha }}

      - name: Checkout config manifests
        uses: actions/checkout@v3
        with:
          repository: stmcallister/e2e-vcluster-demo-config
          path: config-repo
          token: ${{ secrets.GH_TOKEN }}
          persist-credentials: true
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Authenticate with DOKS
        run: |
          doctl kubernetes cluster kubeconfig save ${{ secrets.DO_CLUSTER_NAME }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install vCluster
        run: |
          curl -sL https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64 -o vcluster
          chmod +x vcluster
          sudo mv vcluster /usr/local/bin/

      - name: Create vCluster
        run: |
          vcluster create testing-vcluster \
            --namespace e2e-test \
            --set sync.fromHost.ingressClasses.enabled=true \
            --set sync.toHost.ingresses.enabled=true

      - name: Configure and Deploy Cluster
        run: |
          # Alter k8s.yaml to sed the version
          sed -i'' -e 's/DOCKER_URL/${{ secrets.DOCKER_URL }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' -e 's/FRONTEND_URL/${{ env.FRONTEND_TEST_URL }}/g' config-repo/config/k8s.yaml

          # Run containers in vcluster
          kubectl apply -f config-repo/config/k8s.yaml

      - name: Build Cypress Container and Run
        run: |
          # kubectl get all -A
          # Launch cypress container
          cd e2e/cypress/e2e
          pwd
          ls -al
          
          sed -i '' -e 's/FRONTEND_URL/${{ env.FRONTEND_TEST_URL }}/g' spec.cy.js
          
          cd ../../
          docker build -t burger-e2e:${{ github.sha }} .
          docker run burger-e2e:${{ github.sha }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "stmcallister@gmail.com"

      - name: Commit changes in config repo and push to render_test
        run: |
          # add, commit, and push changes to render_prod branch
          git add -A 
          git commit -m "Updating k8s manifest from ref: ${{ github.sha }}"
          git push -u --force origin HEAD:render_test
        working-directory: config-repo  

      - name: Commit changes in config repo and push to render_prod
        run: |
          # update FRONTEND_URL to FRONTEND_PROD_URL
          sed -i'' -e 's/${{ env.FRONTEND_TEST_URL }}/${{ env.FRONTEND_PROD_URL }}/g' config/k8s.yaml

          # add, commit, and push changes to render_prod branch
          git add -A 
          git commit -m "Updating k8s manifest from ref: ${{ github.sha }}"
          git push -u --force origin HEAD:render_prod
        working-directory: config-repo       